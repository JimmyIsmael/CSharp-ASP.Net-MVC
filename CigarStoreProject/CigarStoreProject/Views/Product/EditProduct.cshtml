@model CigarStoreProject.Models.ProductModel

@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Edit Product</h2>
            <hr />
            <div class="col-md-4">
                <img src="@Url.Content(Model.ImagePath)" class="center-block img-responsive">
            </div>
            <div class="col-md-8">
                @using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitOfMeasure, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.RadioButtonFor(model => model.UnitOfMeasure, "Case", new { name = "Category" }) Case
                                @Html.RadioButtonFor(model => model.UnitOfMeasure, "Each", new { name = "Category" }) Each
                                @Html.RadioButtonFor(model => model.UnitOfMeasure, "Display", new { name = "Category" }) Display
                                @Html.ValidationMessageFor(model => model.UnitOfMeasure, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.RadioButtonFor(model => model.Category, "Cigar", new { name = "Category" }) Cigar
                                @Html.RadioButtonFor(model => model.Category, "Vaper", new { name = "Category" }) Vaper
                                @Html.RadioButtonFor(model => model.Category, "Rogue", new { name = "Category" }) Rogue
                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ImageTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ImageTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="file" name="ImageFile" required />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-10 col-md-2">
                                <input type="submit" value="Save" class="btn primary-btn" />
                            </div>
                        </div>
                    </div>
                }
                <div>
                    @Html.ActionLink("Back to List", "ListProducts")
                </div>
            </div>
        </div>
    </div>
</div>
